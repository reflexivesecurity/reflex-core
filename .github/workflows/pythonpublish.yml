name: Upload Python Package

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine pyaml cloudmitigator-semantic
      - name: See if Version Changed
        run: |
          CHANGED=$(semantic changed)
          if [ "${CHANGED}" == "True" ]
            then
              echo ::set-env name=VERSION_CHANGED::${CHANGED}
              echo ::set-env name=VERSION::$(semantic version)
              echo ::set-env name=EGG::$(ls dist)
              echo ::set-env name=RELEASE_BODY::$(semantic release-body)
          fi
      - name: Create Release
        if: env.VERSION_CHANGED
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
      - name: Trigger deploy
        run: |
          curl -X POST https://api.github.com/repos/reflexivesecurity/reflex-docs-infrastructure/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          --data '{"event_type": "deploy"}'
        env:
          GITHUB_TOKEN: ${{ secrets.CLOUDMITIGATOR_GITHUB_PAT }}
      - name: Build and publish
        if: env.VERSION_CHANGED
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          export VERSION=${{ env.VERSION }}
          python setup.py sdist bdist_wheel
          twine upload dist/*
